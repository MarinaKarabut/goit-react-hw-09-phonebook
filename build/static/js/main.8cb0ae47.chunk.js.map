{"version":3,"sources":["redux/contacts/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","client/Navbar/components/NavbarMenuItem/NavbarMenuItem.jsx","client/Navbar/components/NavbarNav/menuItems.js","client/Navbar/components/NavbarNav/NavbarNav.jsx","client/Navbar/components/UserMenu/avatar.jpg","client/Navbar/components/UserMenu/UserMenu.jsx","client/Navbar/components/AuthNav/menuItems.js","client/Navbar/components/AuthNav/AuthNav.jsx","client/Navbar/components/Navbar/Navbar.jsx","client/components/PrivetRoute.js","client/components/PublicRoute.js","client/components/Loader/Loader.jsx","App.js","index.js","redux/auth/auth-selectors.js","redux/auth/auth-actions.js","redux/contacts/contacts-actions.js","client/Navbar/components/UserMenu/UserMenu.module.css","redux/auth/auth-operations.js","client/Navbar/components/NavbarMenuItem/NavbarMenuItem.module.css","client/Navbar/components/Navbar/Navbar.module.css","shared/components/Button/Button.jsx","client/Navbar/components/NavbarNav/NavbarNav.module.css","shared/components/Button/Button.module.css","client/Navbar/components/AuthNav/AuthNav.module.css","client/components/Loader/Loader.module.css"],"names":["items","createReducer","fetchContactsSuccess","_","payload","addContactSuccess","state","deleteContactSuccess","filter","id","filterContacts","combineReducers","initialStateUser","name","email","loading","initialStateError","user","actions","registerRequest","loginRequest","registerSuccess","loginSuccess","registerError","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserSuccess","token","error","getCurrentUserError","isAuthenticated","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactsReducer","auth","persistReducer","authReducer","devTools","process","persistor","persistStore","NavbarMenuItem","to","text","className","styles","navbarMenuLink","exact","activeClassName","active","menuItems","NavbarNav","navbarMenuElements","map","item","v4","nav","memo","UserMenu","useSelector","getUserName","shallowEqual","avatar","defaultAvatar","dispatch","useDispatch","container","src","alt","width","Button","onClick","logOut","btn","AuthNav","Navbar","getIsAuthenticated","navbarRow","connect","Component","component","redirectTo","routeProps","render","props","restricted","LoaderComponent","wrapper","type","color","height","timeout","HomePage","lazy","ContactsPage","RegisterPage","LoginPage","NotFoundPage","App","getCurrentUser","fallback","Loader","path","PrivetRoute","ReactDOM","StrictMode","document","getElementById","createAction","getCurrentUserRequest","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","module","exports","axios","defaults","baseURL","headers","common","Authorization","register","credentials","a","post","data","message","logIn","getState","persistedToken","get","children"],"mappings":"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","file":"static/js/main.8cb0ae47.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsSuccess,\n  addContactSuccess,\n  deleteContactSuccess,\n  filterContacts,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [filterContacts]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport actions from './auth-actions';\n\nconst initialStateUser = {\n  name: '',\n  email: '',\n  loading: false,\n};\n\nconst initialStateToken = null;\n\nconst initialStateError = null;\n\nconst user = createReducer(initialStateUser, {\n  [actions.registerRequest]: state => ({ ...state, loading: true }),\n  [actions.loginRequest]: state => ({ ...state, loading: true }),\n  [actions.registerSuccess]: (_, { payload }) => payload.user,\n  [actions.loginSuccess]: (_, { payload }) => payload.user,\n  [actions.registerError]: state => ({ ...state, loading: false }),\n  [actions.loginError]: state => ({ ...state, loading: false }),\n  [actions.logoutRequest]: state => ({ ...state, loading: false }),\n  [actions.logoutSuccess]: () => initialStateUser,\n  [actions.logoutError]: state => ({ ...state, loading: false }),\n  [actions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(initialStateToken, {\n  [actions.registerSuccess]: (_, { payload }) => payload.token,\n  [actions.loginSuccess]: (_, { payload }) => payload.token,\n  [actions.logoutSuccess]: () => initialStateToken,\n});\n\nconst error = createReducer(initialStateError, {\n  [actions.registerError]: (_, { payload }) => payload,\n  [actions.registerSuccess]: () => initialStateError,\n  [actions.loginError]: (_, { payload }) => payload,\n  [actions.loginSuccess]: () => initialStateError,\n  [actions.logoutError]: (_, { payload }) => payload,\n  [actions.logoutSuccess]: () => initialStateError,\n  [actions.getCurrentUserError]: (_, { payload }) => payload,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [actions.registerSuccess]: () => true,\n  [actions.loginSuccess]: () => true,\n  [actions.getCurrentUserSuccess]: () => true,\n  [actions.registerError]: () => false,\n  [actions.loginError]: () => false,\n  [actions.getCurrentUserError]: () => false,\n  [actions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// import logger from 'redux-logger';\nimport {\n  persistReducer,\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport contactsReducer from './contacts/contacts-reducer';\nimport authReducer from './auth/auth-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // logger,\n];\n\nconst authPersistConfig = {\n  key: 'token',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n","import React from 'react'\nimport {NavLink} from \"react-router-dom\";\n\nimport styles from \"./NavbarMenuItem.module.css\";\n\nconst NavbarMenuItem = ({to, text}) => {\n    return (\n        <li className={styles.navbarMenuLink}>\n            <NavLink exact to={to} className={styles.navbarMenuLink} activeClassName={styles.active}>{text}</NavLink>\n        </li>\n    )\n}\n\nexport default NavbarMenuItem;","export const menuItems = [\n  {\n    to: '/',\n    text: 'Home',\n  },\n  {\n    to: '/contacts',\n    text: 'Contacts',\n  },\n];\n","import {memo} from 'react';\nimport {v4} from 'uuid'\n\nimport NavbarMenuItem from \"../NavbarMenuItem\";\nimport {menuItems} from \"./menuItems\";\n\nimport styles from \"./NavbarNav.module.css\";\n\nconst NavbarNav =({ isAuthenticated })=> {\n    const visibleMenuElements = isAuthenticated ? [...menuItems] : menuItems.filter(({ text }) => text !== \"Contacts\");\n     const navbarMenuElements = visibleMenuElements.map(item => <NavbarMenuItem key={v4() }{...item} />)\n\n    return (\n        <ul className={styles.nav}>\n            {navbarMenuElements}\n        </ul>\n    )\n};\n\nexport default memo(NavbarNav);\n","export default __webpack_public_path__ + \"static/media/avatar.696e758a.jpg\";","\nimport { useSelector, shallowEqual, useDispatch} from 'react-redux';\n\nimport { getUserName } from '../../../../redux/auth/auth-selectors'\n\nimport {logOut} from '../../../../redux/auth/auth-operations'\n\n\nimport Button from '../../../../shared/components/Button'\nimport defaultAvatar from './avatar.jpg'\n\n\nimport styles from './UserMenu.module.css'\n\nconst UserMenu = () => {\n \n    const name = useSelector(state => getUserName(state), shallowEqual)\n    const avatar= defaultAvatar\n\n    const dispatch = useDispatch()\n\n    const onLogout = ()=>dispatch(logOut())\n\n    return (\n        <div className={ styles.container}>\n            <img src={avatar} alt=\"\" width=\"32\" className={ styles.avatar}/>\n            <span className={ styles.name}>Welcome, {name}</span>\n            <Button onClick={onLogout} className={ styles.btn}>Logout</Button>\n            \n        </div>\n    )\n};\n\nexport default UserMenu;\n","export const menuItems = [\n  {\n    to: '/register',\n    text: 'Sign up',\n  },\n  {\n    to: '/login',\n    text: 'Log in',\n  },\n];\n","\nimport {v4} from 'uuid'\n\nimport NavbarMenuItem from '../NavbarMenuItem'\n\nimport { menuItems } from './menuItems'\n\nimport styles from './AuthNav.module.css'\n\n\n\nconst AuthNav=() =>{\n    const navbarMenuElements = menuItems.map(item => <NavbarMenuItem key={v4() }{...item} />)\n\n    return (\n        <ul className={styles.nav}>\n            {navbarMenuElements}\n        </ul>\n    )\n};\n\nexport default AuthNav;\n","\nimport { useSelector,  shallowEqual} from \"react-redux\";\n\nimport NavbarNav from '../NavbarNav'\nimport UserMenu from '../UserMenu'\nimport AuthNav from '../AuthNav'\n\nimport {getIsAuthenticated} from '../../../../redux/auth/auth-selectors'\n\nimport styles from \"./Navbar.module.css\";\n\n\n\n\nconst Navbar = () => {\n    const isAuthenticated = useSelector(state => getIsAuthenticated(state), shallowEqual);\n\n    return (\n        <nav className=\"navbar\">\n            <div className={ styles.container}>\n                <div className={ styles.navbarRow}>\n                    < NavbarNav isAuthenticated={isAuthenticated} />\n                    { isAuthenticated? <UserMenu/> : <AuthNav/>}\n                </div>\n            </div>\n        </nav>\n    )\n}\n\n\n\nexport default Navbar;\n\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport styles from './Loader.module.css';\n\nfunction LoaderComponent() {\n  return (\n    <div className={styles.wrapper}>\n      <Loader\n        type=\"ThreeDots\"\n        color='green'\n        height={100}\n        width={100}\n        timeout={3000}\n      />\n    </div>\n  );\n}\n\nexport default LoaderComponent;","import { Suspense, lazy } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport Navbar from './client/Navbar/components/Navbar';\n\nimport { getCurrentUser } from './redux/auth/auth-operations';\nimport PrivetRoute from './client/components/PrivetRoute';\nimport PublicRoute from './client/components/PublicRoute';\n\nimport Loader from './client/components/Loader';\n\nconst HomePage = lazy(() => import('./client/HomePage'));\nconst ContactsPage = lazy(() => import('./client/Contacts/pages/ContactsPage'));\nconst RegisterPage = lazy(() => import('./client/auth/pages/RegisterPage'));\nconst LoginPage = lazy(() => import('./client/auth/pages/LoginPage'));\nconst NotFoundPage = lazy(() => import('./client/NotFoundPage'));\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  dispatch(getCurrentUser());\n\n  return (\n    <>\n      <Navbar />\n      <Suspense fallback={<Loader />}>\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <PublicRoute\n            exact\n            path=\"/register\"\n            restricted\n            redirectTo=\"/contacts\"\n            component={RegisterPage}\n          />\n          <PublicRoute\n            exact\n            path=\"/login\"\n            restricted\n            redirectTo=\"/contacts\"\n            component={LoginPage}\n          />\n          <PrivetRoute\n            exact\n            path=\"/contacts\"\n            component={ContactsPage}\n            redirectTo=\"/login\"\n          />\n          <Route component={NotFoundPage} />\n        </Switch>\n      </Suspense>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport store from './redux/store';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <BrowserRouter>\n        <PersistGate loading={null} persistor={store.persistor}>\n          <App />\n        </PersistGate>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","export const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nexport const getUserName = state => state.auth.user.name;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const registerRequest = createAction('auth/registerRequest');\nexport const registerSuccess = createAction('auth/registerSuccess');\nexport const registerError = createAction('auth/registerError');\n\nexport const loginRequest = createAction('auth/loginRequest');\nexport const loginSuccess = createAction('auth/loginSuccess');\nexport const loginError = createAction('auth/loginError');\n\nexport const logoutRequest = createAction('auth/logoutRequest');\nexport const logoutSuccess = createAction('auth/logoutSuccess');\nexport const logoutError = createAction('auth/logoutError');\n\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\n\nconst actions = {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n\nexport default actions;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts / deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts / deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts / deleteContactError');\n\nexport const filterContacts = createAction('contacts/filter');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__3imD1\",\"btn\":\"UserMenu_btn__16jzA\",\"name\":\"UserMenu_name__2KQd3\",\"avatar\":\"UserMenu_avatar__7wBEE\"};","import axios from 'axios';\n\nimport actions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport const register = credentials => async dispatch => {\n  dispatch(actions.registerRequest());\n\n  try {\n    const { data } = await axios.post('/users/signup', credentials);\n\n    token.set(data.token);\n\n    dispatch(actions.registerSuccess(data));\n  } catch (error) {\n    dispatch(actions.registerError(error.message));\n  }\n};\n\nexport const logIn = credentials => async dispatch => {\n  dispatch(actions.loginRequest());\n\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n\n    token.set(data.token);\n\n    dispatch(actions.loginSuccess(data));\n  } catch (error) {\n    dispatch(actions.loginError(error.message));\n  }\n};\n\nexport const logOut = () => async dispatch => {\n  dispatch(actions.logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(actions.logoutSuccess());\n  } catch (error) {\n    dispatch(actions.logoutError(error.message));\n  }\n};\n\nexport const getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n\n  dispatch(actions.getCurrentUserRequest());\n  try {\n    const { data } = await axios.get('/users/current');\n    dispatch(actions.getCurrentUserSuccess(data));\n  } catch (error) {\n    dispatch(actions.getCurrentUserError(error.message));\n  }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarMenuLink\":\"NavbarMenuItem_navbarMenuLink__3b7iS\",\"active\":\"NavbarMenuItem_active__1AjOC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarRow\":\"Navbar_navbarRow__3TTb_\",\"container\":\"Navbar_container__qrX73\"};","import React from 'react';\nimport PropTypes from 'prop-types'\n\n\nimport styles from './Button.module.css'\n\nconst Button =({ children, type = 'button', onClick = () => null,className}) =>{\n    return <button  className={`${styles.btn} ${className}`} type={type} onClick={onClick}>{children}</button>\n};\n\nexport default Button;\n\nButton.propTypes = {\n    type: PropTypes.string,\n    onClick: PropTypes.func,\n    className: PropTypes.string,\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavbarNav_nav__UTxuT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1rFyd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"AuthNav_nav__2AnYc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Loader_wrapper__2daWs\"};"],"sourceRoot":""}