{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","shared/hooks/useForm.js","shared/components/FormField/FormField.module.css","shared/components/FormField/FormField.jsx","client/Contacts/components/Filter/Filter.module.css","client/Contacts/components/ContactListItem/ContactListItem.module.css","client/Contacts/pages/ContactsPage/ContactsPage.module.css","client/Contacts/components/ContactForm/fields.js","client/Contacts/components/ContactForm/initialState.js","client/Contacts/components/ContactForm/ContactForm.jsx","redux/contacts/contacts-operations.js","redux/contacts/selectors.js","client/Contacts/components/Filter/Filter.jsx","client/Contacts/components/ContactListItem/ContactListItem.jsx","client/Contacts/components/ContactList/ContactList.jsx","client/Contacts/pages/ContactsPage/ContactsPage.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","useForm","initialState","onSubmit","useState","formData","setFormData","target","name","e","preventDefault","module","exports","FormField","label","inputProps","id","uuidv4","className","htmlFor","styles","input","fields","type","placeholder","required","number","ContactForm","dispatch","useDispatch","useCallback","contact","a","addContactRequest","console","log","axios","post","data","addContactSuccess","addContactError","message","addContact","handleChange","handleSubmit","onChange","Button","getFilterContacts","state","contacts","filter","getVisibleContacts","createSelector","items","toLowerCase","includes","Filter","useSelector","shallowEqual","filterContacts","ContactListItem","onClick","list","btn","ContactList","onDeleteContact","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","deleteContact","contactElements","map","props","Phonebook","useEffect","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","box","tittle"],"mappings":"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","file":"static/js/3.d847cc3c.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit = () => {} }) => {\n  const [formData, setFormData] = useState(initialState);\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(formData);\n    setFormData(initialState);\n  };\n\n  return [formData, setFormData, handleChange, handleSubmit];\n};\n\nexport default useForm;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"FormField_input__1VqFC\"};","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport styles from './FormField.module.css'\n\nconst FormField = ({ label, ...inputProps }) => {\n    const id = uuidv4();\n    return (\n        <div className=\"form-group\">\n            {label && <label htmlFor={id}>{label}</label>}\n            <input id={id} className={styles.input} {...inputProps} />\n        </div>\n    )\n}\nexport default FormField;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3lWFD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactListItem_btn__3gXo_\",\"list\":\"ContactListItem_list__2-L3z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"ContactsPage_box__34Mjg\",\"tittle\":\"ContactsPage_tittle__irjLH\",\"notification\":\"ContactsPage_notification__2oN6h\"};","export const fields = {\n    username: {\n        label: \"Name\",\n        type: \"text\",\n        placeholder: \"Jacob Mercer\",\n        name: \"name\",\n        required: true,\n        \n    },\n     phone: {\n        label: \"Number\",\n        type: \"tel\",\n        placeholder: \"111-11-11\",\n        name: \"number\",\n        required: true,  \n    },\n}","export const initialState = {\n  name: '',\n  number: '',\n};\n","import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux'\nimport { addContact } from '../../../../redux/contacts/contacts-operations'\n\n\nimport useForm from '../../../../shared/hooks/useForm';\n\nimport FormField from '../../../../shared/components/FormField'\nimport Button from '../../../../shared/components/Button'\n\n\nimport {fields} from \"./fields\";\n\n\nimport { initialState } from \"./initialState\"\n\nconst ContactForm = () => {\n\n\n    const dispatch = useDispatch()\n\n    const onSubmit = useCallback((contact) => dispatch(addContact(contact)), [dispatch])\n\n    const [data, , handleChange, handleSubmit] = useForm({ initialState, onSubmit });\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <FormField {...fields.username} value={data.name} onChange={handleChange} />\n            <FormField {...fields.phone} value={data.number} onChange={handleChange} />\n            <Button type=\"submit\">Add contact</Button>\n          </form>\n        )\n\n}\nexport default ContactForm\n","import axios from 'axios';\n\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\n// axios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  }\n};\n\nexport const addContact =\n  ({ name, number }) =>\n  async dispatch => {\n    const contact = {\n      name,\n      number,\n    };\n\n    dispatch(addContactRequest());\n\n    try {\n      console.log(contact);\n      const { data } = await axios.post('/contacts', contact);\n      dispatch(addContactSuccess(data));\n    } catch (error) {\n      dispatch(addContactError(error.message));\n    }\n  };\n\nexport const deleteContact = id => async dispatch => {\n  dispatch(deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(deleteContactError(error.message));\n  }\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilterContacts = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilterContacts],\n  (items, filter) => {\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  },\n);\n","import {useCallback} from 'react';\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { filterContacts } from '../../../../redux/contacts/contacts-actions'\nimport {getFilterContacts} from '../../../../redux/contacts/selectors'\n\nimport styles from './Filter.module.css'\n\n\nconst Filter = () => {\n  const value = useSelector(state => getFilterContacts(state), shallowEqual)\n\n  const dispatch = useDispatch()\n  \n  const onChange = useCallback(({ target }) => dispatch(filterContacts(target.value)), [dispatch])\n\n\n  const id = uuidv4();\n    return (\n        <label htmlFor={id}>\n          Finds contacts by name <input\n          className = {styles.input} \n          type=\"text\"\n          value = {value}\n          onChange={onChange}\n          id={id}\n          />\n      \n        </label>\n    )\n};\n\n\nexport default Filter;\n","import React from 'react';\n\nimport PropTypes from 'prop-types'\n\n\nimport styles from './ContactListItem.module.css'\n\nconst ContactListItem=({name, number, onClick}) => {\n    return (\n        <li>\n            <span className ={styles.list}>{name}</span> : <span>{number}</span>\n            <button className={styles.btn} onClick={onClick}>Delete</button>\n      \n        </li>)\n};\n\n\n\nexport default ContactListItem;\n\nContactListItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n}","import {useCallback} from 'react';\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../../../redux/contacts/contacts-operations'\nimport { getVisibleContacts} from '../../../../redux/contacts/selectors'\nimport ContactsListItem from '../ContactListItem'\n\n\n\nconst ContactList = () => {\n  \n  const contacts = useSelector(state => getVisibleContacts(state), shallowEqual)\n\n  const dispatch = useDispatch()\n\n  const onDeleteContact= useCallback((id) => dispatch(deleteContact(id)), [dispatch])\n\n  const contactElements = contacts.map(({ id, ...props }) => (\n      <ContactsListItem key={id}  {...props} onClick={()=> onDeleteContact(id)}\n      />\n    ))\n        \n    return (\n        <ul>\n            {contactElements}\n        </ul>\n    )\n};\n\n\nexport default ContactList;\n\n\n","import { useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport ContactForm from '../../components/ContactForm';\nimport Filter from '../../components/Filter';\nimport ContactList from '../../components/ContactList';\n\nimport {fetchContacts} from '../../../../redux/contacts/contacts-operations'\n\n\nimport styles from './ContactsPage.module.css';\n\nconst Phonebook = () => {\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchContacts())\n  }, [dispatch])\n\n\n  return (\n      <div className={styles.box}>\n        <h1 className={styles.tittle}>Phonebook</h1>\n        <ContactForm />\n        <h2 className={styles.tittle}>Contacts</h2>\n        <Filter/>\n        <ContactList />\n      </div>\n    );\n  \n}\n\nexport default Phonebook \n\n\n  \n"],"sourceRoot":""}