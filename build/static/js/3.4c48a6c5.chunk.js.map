{"version":3,"sources":["shared/components/FormField/FormField.module.css","shared/components/FormField/FormField.jsx","client/Contacts/components/Filter/Filter.module.css","client/Contacts/components/ContactListItem/ContactListItem.module.css","client/Contacts/pages/ContactsPage/ContactsPage.module.css","redux/contacts/selectors.js","client/Contacts/components/ContactForm/fields.js","client/Contacts/components/ContactForm/initialState.js","client/Contacts/components/ContactForm/ContactForm.jsx","redux/contacts/contacts-operations.js","client/Contacts/components/Filter/Filter.jsx","client/Contacts/components/ContactListItem/ContactListItem.jsx","client/Contacts/components/ContactList/ContactList.jsx","client/Contacts/pages/ContactsPage/ContactsPage.jsx"],"names":["module","exports","FormField","label","inputProps","id","uuidv4","className","htmlFor","styles","input","getContacts","state","contacts","items","getFilterContacts","filter","getVisibleContacts","createSelector","name","toLowerCase","includes","fields","type","placeholder","required","initialState","number","ContactForm","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","find","contact","onSubmit","reset","alert","this","onChange","Button","Component","connect","dispatch","a","addContactRequest","axios","post","data","addContactSuccess","addContactError","message","addContact","filterContacts","ContactListItem","onClick","list","btn","onDeleteContact","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","deleteContact","contactElements","map","Phonebook","fetchContacts","box","tittle","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError"],"mappings":"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","file":"static/js/3.4c48a6c5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"FormField_input__1VqFC\"};","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport styles from './FormField.module.css'\n\nconst FormField = ({ label, ...inputProps }) => {\n    const id = uuidv4();\n    return (\n        <div className=\"form-group\">\n            {label && <label htmlFor={id}>{label}</label>}\n            <input id={id} className={styles.input} {...inputProps} />\n        </div>\n    )\n}\nexport default FormField;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3lWFD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactListItem_btn__3gXo_\",\"list\":\"ContactListItem_list__2-L3z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"ContactsPage_box__34Mjg\",\"tittle\":\"ContactsPage_tittle__irjLH\",\"notification\":\"ContactsPage_notification__2oN6h\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilterContacts = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilterContacts],\n  (items, filter) => {\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  },\n);\n","export const fields = {\n    username: {\n        label: \"Name\",\n        type: \"text\",\n        placeholder: \"Jacob Mercer\",\n        name: \"name\",\n        required: true,\n        \n    },\n     phone: {\n        label: \"Number\",\n        type: \"tel\",\n        placeholder: \"111-11-11\",\n        name: \"number\",\n        required: true,  \n    },\n}","export const initialState = {\n  name: '',\n  number: '',\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { addContact } from '../../../../redux/contacts/contacts-operations'\nimport {getContacts} from '../../../../redux/contacts/selectors'\n\nimport FormField from '../../../../shared/components/FormField'\nimport Button from '../../../../shared/components/Button'\n\n\nimport {fields} from \"./fields\";\n\n\nimport {initialState} from \"./initialState\"\n\nclass ContactForm extends  Component {\n    state = { ...initialState }\n    \n\n    handleChange = ({target}) => {\n        const {name, value} = target\n        this.setState({[name]: value})\n    }\n        \n    handleSubmit = (e) => {\n        e.preventDefault()\n        const { name, number } = this.state;\n        const { contacts } = this.props\n        const findContact = contacts.find(contact => contact.name.toLowerCase() ===  name.toLowerCase() || contact.number === number)\n        if (!findContact) {\n            this.props.onSubmit(name, number)\n            this.reset()\n            return\n        }\n        alert(`${name}  is already in contacts!` )\n        \n    }\n\n    reset = () => {\n        this.setState({...initialState})\n    }\n\n    render(){\n        const {name, number} = this.state;\n        const { handleChange, handleSubmit } = this;\n        \n        \n        return (\n            <form  onSubmit={handleSubmit}>\n                <FormField {...fields.username} value={name} onChange={handleChange} />\n                <FormField {...fields.phone} value={number} onChange={handleChange} />\n                <Button type=\"submit\">Add contact</Button>\n          </form>\n        )\n    }\n};\n\nconst mapStateToProps = (state) => ({\n    contacts: getContacts(state)\n    \n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    onSubmit: (name, number) => dispatch(addContact(name, number))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n\n","import axios from 'axios';\n\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\n// axios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  }\n};\n\nexport const addContact = (name, number) => async dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error.message));\n  }\n};\n\nexport const deleteContact = id => async dispatch => {\n  dispatch(deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(deleteContactError(error.message));\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types'\nimport { v4 as uuidv4 } from 'uuid';\nimport { filterContacts } from '../../../../redux/contacts/contacts-actions'\nimport {getFilterContacts} from '../../../../redux/contacts/selectors'\n\nimport styles from './Filter.module.css'\n\n\nconst Filter = ({ value, onChange }) => {\n  const id = uuidv4();\n    return (\n        <label htmlFor={id}>\n          Finds contacts by name <input\n          className = {styles.input} \n          type=\"text\"\n          value = {value}\n          onChange={onChange}\n          id={id}\n          />\n      \n        </label>\n    )\n};\n\nconst mapStateToProps = (state) => ({\n  value: getFilterContacts(state)\n  \n})\n\nconst mapDispatchToProps = dispatch =>({\n  onChange: ({target}) => dispatch(filterContacts(target.value))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types'\n\n\nimport styles from './ContactListItem.module.css'\n\nfunction ContactListItem({name, number, onClick}) {\n    return (\n        <li>\n            <span className ={styles.list}>{name}</span> : <span>{number}</span>\n            <button className={styles.btn} onClick={onClick}>Delete</button>\n      \n        </li>)\n};\n\n\n\nexport default ContactListItem;\n\nContactListItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { deleteContact } from '../../../../redux/contacts/contacts-operations'\nimport { getVisibleContacts} from '../../../../redux/contacts/selectors'\nimport PropTypes from 'prop-types'\nimport ContactsListItem from '../ContactListItem'\n\n\n\nfunction ContactList({contacts, onDeleteContact}) {\n  const contactElements = contacts.map(({ id, ...props }) => (\n      <ContactsListItem key={id}  {...props} onClick={()=> onDeleteContact(id)}\n      />\n    ))\n        \n    return (\n        <ul>\n            {contactElements}\n        </ul>\n    )\n};\n\n\nconst mapStateToProps = (state) => ({\n    contacts: getVisibleContacts(state)\n})\n\n\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: (id) => dispatch(deleteContact(id))\n}) \n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }).isRequired,\n    ),\n    onDeleteContact: PropTypes.func.isRequired,\n  };\n  \n","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport ContactForm from '../../components/ContactForm';\nimport Filter from '../../components/Filter';\nimport ContactList from '../../components/ContactList';\n\nimport {fetchContacts} from '../../../../redux/contacts/contacts-operations'\n\n\nimport styles from './ContactsPage.module.css';\n\n\nclass Phonebook extends Component {\n  \n  componentDidMount() {\n    this.props.fetchContacts()\n  }\n\n  render() {\n    return (\n      <div className={styles.box}>\n        <h1 className={styles.tittle}>Phonebook</h1>\n        <ContactForm />\n        <h2 className={styles.tittle}>Contacts</h2>\n        <Filter/>\n        <ContactList />\n      </div>\n    );\n  }\n}\n\n\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: ()=> dispatch(fetchContacts())\n})\n\n\nexport default connect(null, mapDispatchToProps)(Phonebook);\n"],"sourceRoot":""}