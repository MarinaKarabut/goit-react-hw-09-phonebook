{"version":3,"sources":["redux/contacts/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","client/Navbar/components/NavbarMenuItem/NavbarMenuItem.jsx","client/Navbar/components/NavbarNav/menuItems.js","client/Navbar/components/NavbarNav/NavbarNav.jsx","redux/auth/auth-selectors.js","client/Navbar/components/UserMenu/avatar.jpg","client/Navbar/components/UserMenu/UserMenu.jsx","client/Navbar/components/AuthNav/menuItems.js","client/Navbar/components/AuthNav/AuthNav.jsx","client/Navbar/components/Navbar/Navbar.jsx","client/components/PrivetRoute.js","client/components/PublicRoute.js","client/components/Loader/Loader.jsx","App.js","index.js","redux/contacts/contacts-actions.js","client/Navbar/components/UserMenu/UserMenu.module.css","redux/auth/auth-operations.js","redux/auth/auth-actions.js","client/Navbar/components/NavbarMenuItem/NavbarMenuItem.module.css","client/Navbar/components/Navbar/Navbar.module.css","shared/components/Button/Button.jsx","client/Navbar/components/NavbarNav/NavbarNav.module.css","shared/components/Button/Button.module.css","client/Navbar/components/AuthNav/AuthNav.module.css","client/components/Loader/Loader.module.css"],"names":["items","createReducer","fetchContactsSuccess","_","payload","addContactSuccess","state","deleteContactSuccess","filter","id","filterContacts","combineReducers","initialStateUser","name","email","initialStateError","user","actions","registerSuccess","loginSuccess","logoutSuccess","getCurrentUserSuccess","token","error","registerError","loginError","logoutError","getCurrentUserError","isAuthenticated","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactsReducer","auth","persistReducer","authReducer","devTools","process","persistor","persistStore","NavbarMenuItem","to","text","className","styles","navbarMenuLink","exact","activeClassName","active","menuItems","NavbarNav","navbarMenuElements","map","item","v4","nav","getIsAuthenticated","getUserNme","mapDispatchToProps","onLogout","logOut","connect","avatar","defaultAvatar","container","src","alt","width","Button","onClick","btn","AuthNav","navbarRow","Component","component","redirectTo","routeProps","render","props","restricted","LoaderComponent","wrapper","type","color","height","timeout","HomePage","lazy","ContactsPage","RegisterPage","LoginPage","NotFoundPage","App","this","onGetCurrentUser","fallback","Loader","path","PrivetRoute","getCurrentUser","ReactDOM","StrictMode","loading","document","getElementById","fetchContactsRequest","createAction","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","module","exports","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","registerRequest","post","data","message","logIn","loginRequest","logoutRequest","getState","persistedToken","getCurrentUserRequest","get","children"],"mappings":"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","file":"static/js/main.61a88daa.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsSuccess,\n  addContactSuccess,\n  deleteContactSuccess,\n  filterContacts,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [filterContacts]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport actions from './auth-actions';\n\nconst initialStateUser = {\n  name: '',\n  email: '',\n};\n\nconst initialStateToken = null;\n\nconst initialStateError = null;\n\nconst user = createReducer(initialStateUser, {\n  [actions.registerSuccess]: (_, { payload }) => payload.user,\n  [actions.loginSuccess]: (_, { payload }) => payload.user,\n  [actions.logoutSuccess]: () => initialStateUser,\n  [actions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(initialStateToken, {\n  [actions.registerSuccess]: (_, { payload }) => payload.token,\n  [actions.loginSuccess]: (_, { payload }) => payload.token,\n  [actions.logoutSuccess]: () => initialStateToken,\n});\n\nconst error = createReducer(initialStateError, {\n  [actions.registerError]: (_, { payload }) => payload,\n  [actions.registerSuccess]: () => initialStateError,\n  [actions.loginError]: (_, { payload }) => payload,\n  [actions.loginSuccess]: () => initialStateError,\n  [actions.logoutError]: (_, { payload }) => payload,\n  [actions.logoutSuccess]: () => initialStateError,\n  [actions.getCurrentUserError]: (_, { payload }) => payload,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [actions.registerSuccess]: () => true,\n  [actions.loginSuccess]: () => true,\n  [actions.getCurrentUserSuccess]: () => true,\n  [actions.registerError]: () => false,\n  [actions.loginError]: () => false,\n  [actions.getCurrentUserError]: () => false,\n  [actions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// import logger from 'redux-logger';\nimport {\n  persistReducer,\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport contactsReducer from './contacts/contacts-reducer';\nimport authReducer from './auth/auth-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // logger,\n];\n\nconst authPersistConfig = {\n  key: 'token',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n","import React from 'react'\nimport {NavLink} from \"react-router-dom\";\n\nimport styles from \"./NavbarMenuItem.module.css\";\n\nconst NavbarMenuItem = ({to, text}) => {\n    return (\n        <li className={styles.navbarMenuLink}>\n            <NavLink exact to={to} className={styles.navbarMenuLink} activeClassName={styles.active}>{text}</NavLink>\n        </li>\n    )\n}\n\nexport default NavbarMenuItem;","export const menuItems = [\n  {\n    to: '/',\n    text: 'Home',\n  },\n  {\n    to: '/contacts',\n    text: 'Contacts',\n  },\n];\n","import React from 'react';\nimport {v4} from 'uuid'\n\nimport NavbarMenuItem from \"../NavbarMenuItem\";\nimport {menuItems} from \"./menuItems\";\n\nimport styles from \"./NavbarNav.module.css\";\n\nfunction NavbarNav({ isAuthenticated }) {\n    const visibleMenuElements = isAuthenticated ? [...menuItems] : menuItems.filter(({ text }) => text !== \"Contacts\");\n     const navbarMenuElements = visibleMenuElements.map(item => <NavbarMenuItem key={v4() }{...item} />)\n\n    return (\n        <ul className={styles.nav}>\n            {navbarMenuElements}\n        </ul>\n    )\n};\n\nexport default NavbarNav;\n","export const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nexport const getUserNme = state => state.auth.user.name;\n","export default __webpack_public_path__ + \"static/media/avatar.696e758a.jpg\";","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { getUserNme } from '../../../../redux/auth/auth-selectors'\n\nimport {logOut} from '../../../../redux/auth/auth-operations'\n\n\nimport Button from '../../../../shared/components/Button'\nimport defaultAvatar from './avatar.jpg'\n\n\nimport styles from './UserMenu.module.css'\n\nfunction UserMenu({avatar, name, onLogout}) {\n    return (\n        <div className={ styles.container}>\n            <img src={avatar} alt=\"\" width=\"32\" className={ styles.avatar}/>\n            <span className={ styles.name}>Welcome, {name}</span>\n            <Button onClick={onLogout} className={ styles.btn}>Logout</Button>\n            \n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => ({\n    name: getUserNme(state),\n    avatar: defaultAvatar\n})\n\nconst mapDispatchToProps = {\n    onLogout: logOut\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","export const menuItems = [\n  {\n    to: '/register',\n    text: 'Sign up',\n  },\n  {\n    to: '/login',\n    text: 'Log in',\n  },\n];\n","import React from 'react';\nimport {v4} from 'uuid'\n\nimport NavbarMenuItem from '../NavbarMenuItem'\n\nimport { menuItems } from './menuItems'\n\nimport styles from './AuthNav.module.css'\n\n\n\nfunction AuthNav() {\n    const navbarMenuElements = menuItems.map(item => <NavbarMenuItem key={v4() }{...item} />)\n\n    return (\n        <ul className={styles.nav}>\n            {navbarMenuElements}\n        </ul>\n    )\n};\n\nexport default AuthNav;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport NavbarNav from '../NavbarNav'\nimport UserMenu from '../UserMenu'\nimport AuthNav from '../AuthNav'\n\nimport {getIsAuthenticated} from '../../../../redux/auth/auth-selectors'\n\nimport styles from \"./Navbar.module.css\";\n\n\n\n\nconst Navbar = ({ isAuthenticated }) => {\n\n    return (\n        <nav className=\"navbar\">\n            <div className={ styles.container}>\n                <div className={ styles.navbarRow}>\n                    < NavbarNav isAuthenticated={isAuthenticated} />\n                    { isAuthenticated? <UserMenu/> : <AuthNav/>}\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: getIsAuthenticated(state)\n})\n\n\n\nexport default connect(mapStateToProps)(Navbar);\n\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport styles from './Loader.module.css';\n\nfunction LoaderComponent() {\n  return (\n    <div className={styles.wrapper}>\n      <Loader\n        type=\"ThreeDots\"\n        color='green'\n        height={100}\n        width={100}\n        timeout={3000}\n      />\n    </div>\n  );\n}\n\nexport default LoaderComponent;","import { Component, Suspense, lazy } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Navbar from './client/Navbar/components/Navbar';\n\nimport { getCurrentUser } from './redux/auth/auth-operations';\nimport PrivetRoute from './client/components/PrivetRoute';\nimport PublicRoute from './client/components/PublicRoute';\n\nimport Loader from './client/components/Loader';\n\nconst HomePage = lazy(() => import('./client/HomePage'));\nconst ContactsPage = lazy(() => import('./client/Contacts/pages/ContactsPage'));\nconst RegisterPage = lazy(() => import('./client/auth/pages/RegisterPage'));\nconst LoginPage = lazy(() => import('./client/auth/pages/LoginPage'));\nconst NotFoundPage = lazy(() => import('./client/NotFoundPage'));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n  render() {\n    return (\n      <>\n        <Navbar />\n        <Suspense fallback={<Loader />}>\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <PublicRoute\n              exact\n              path=\"/register\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={RegisterPage}\n            />\n            <PublicRoute\n              exact\n              path=\"/login\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={LoginPage}\n            />\n            <PrivetRoute\n              exact\n              path=\"/contacts\"\n              component={ContactsPage}\n              redirectTo=\"/login\"\n            />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </Suspense>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport store from './redux/store';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <BrowserRouter>\n        <PersistGate loading={null} persistor={store.persistor}>\n          <App />\n        </PersistGate>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts / deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts / deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts / deleteContactError');\n\nexport const filterContacts = createAction('contacts/filter');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__3imD1\",\"btn\":\"UserMenu_btn__16jzA\",\"name\":\"UserMenu_name__2KQd3\",\"avatar\":\"UserMenu_avatar__7wBEE\"};","import axios from 'axios';\n\nimport actions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport const register = credentials => async dispatch => {\n  dispatch(actions.registerRequest());\n\n  try {\n    const { data } = await axios.post('/users/signup', credentials);\n\n    token.set(data.token);\n\n    dispatch(actions.registerSuccess(data));\n  } catch (error) {\n    dispatch(actions.registerError(error.message));\n  }\n};\n\nexport const logIn = credentials => async dispatch => {\n  dispatch(actions.loginRequest());\n\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n\n    token.set(data.token);\n\n    dispatch(actions.loginSuccess(data));\n  } catch (error) {\n    dispatch(actions.loginError(error.message));\n  }\n};\n\nexport const logOut = () => async dispatch => {\n  dispatch(actions.logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(actions.logoutSuccess());\n  } catch (error) {\n    dispatch(actions.logoutError(error.message));\n  }\n};\n\nexport const getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n\n  dispatch(actions.getCurrentUserRequest());\n  try {\n    const { data } = await axios.get('/users/current');\n    dispatch(actions.getCurrentUserSuccess(data));\n  } catch (error) {\n    dispatch(actions.getCurrentUserError(error.message));\n  }\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const registerRequest = createAction('auth/registerRequest');\nexport const registerSuccess = createAction('auth/registerSuccess');\nexport const registerError = createAction('auth/registerError');\n\nexport const loginRequest = createAction('auth/loginRequest');\nexport const loginSuccess = createAction('auth/loginSuccess');\nexport const loginError = createAction('auth/loginError');\n\nexport const logoutRequest = createAction('auth/logoutRequest');\nexport const logoutSuccess = createAction('auth/logoutSuccess');\nexport const logoutError = createAction('auth/logoutError');\n\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\n\nconst actions = {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n\nexport default actions;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarMenuLink\":\"NavbarMenuItem_navbarMenuLink__3b7iS\",\"active\":\"NavbarMenuItem_active__1AjOC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarRow\":\"Navbar_navbarRow__3TTb_\",\"container\":\"Navbar_container__qrX73\"};","import React from 'react';\nimport PropTypes from 'prop-types'\n\n\nimport styles from './Button.module.css'\n\nfunction Button ({ children, type = 'button', onClick = () => null,className}) {\n    return <button  className={`${styles.btn} ${className}`} type={type} onClick={onClick}>{children}</button>\n};\n\nexport default Button;\n\nButton.propTypes = {\n    type: PropTypes.string,\n    onClick: PropTypes.func,\n    className: PropTypes.string,\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavbarNav_nav__UTxuT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1rFyd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"AuthNav_nav__2AnYc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Loader_wrapper__2daWs\"};"],"sourceRoot":""}